"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_1 = require("../../plugin");
const theme_docusaurus_1 = require("../theme.docusaurus");
const theme_vuepress_1 = require("../theme.vuepress");
function metadata() {
    if (!isVisible()) {
        return '';
    }
    const md = `---
id: ${getId(this)}
title: ${getTitle(this)}
sidebar_label: ${getLabel(this)}
---\n`;
    return md;
}
exports.metadata = metadata;
function getId(page) {
    const urlSplit = page.url.split('/');
    return urlSplit[urlSplit.length - 1].replace('.md', '');
}
function getLabel(page) {
    if (page.url === plugin_1.MarkdownPlugin.theme.indexName) {
        return plugin_1.MarkdownPlugin.settings.readme === 'none' ? 'Globals' : 'README';
    }
    if (page.url === plugin_1.MarkdownPlugin.theme.globalsName) {
        return 'Globals';
    }
    return getTitle(page);
}
function getTitle(page) {
    if (page.url === plugin_1.MarkdownPlugin.theme.indexName) {
        return (page.project.packageInfo && page.project.packageInfo.label) || page.project.name.replace(/^@.+?\//, '');
    }
    if (page.url === plugin_1.MarkdownPlugin.theme.globalsName) {
        return 'Globals';
    }
    return plugin_1.MarkdownPlugin.theme.navigationTitlesMap[page.url];
}
function isVisible() {
    if (plugin_1.MarkdownPlugin.theme instanceof theme_docusaurus_1.DocusaurusTheme || plugin_1.MarkdownPlugin.theme instanceof theme_vuepress_1.VuePressTheme) {
        return true;
    }
    return false;
}
